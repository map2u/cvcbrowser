{# empty Twig template #}
<h4>Setup Viewing Scale</h4>
*if map center address is empty, current map center will be saved as viewing scale center.
<div id="useraccount_mapbookmark" style="margin:20px 10px;">
    <div style="border: 1px solid gainsboro; border-radius: 3px;margin:3px;padding:10px;">
        {% include 'ApplicationMap2uCoreBundle:UserAccount:mapbookmark_form.html.twig' with {'form':form1,'index':1,'level':11,'scaleText':scaleText,'bookmarks':bookmarks} %}

    </div>
    <div style="border: 1px solid gainsboro; border-radius: 3px;margin:3px;padding:10px;">
        {% include 'ApplicationMap2uCoreBundle:UserAccount:mapbookmark_form.html.twig' with {'form':form2,'index':2,'level':14,'scaleText':scaleText,'bookmarks':bookmarks} %}

    </div>          

    <div style="border: 1px solid gainsboro; border-radius: 3px;margin:3px;padding:10px;">
        {% include 'ApplicationMap2uCoreBundle:UserAccount:mapbookmark_form.html.twig' with {'form':form3,'index':3,'level':17,'scaleText':scaleText,'bookmarks':bookmarks} %}
    </div>
</div>

<script>
    $(function () {

        $("div#useraccount_mapbookmark form.useraccount_mapbookmark_form .address input[type='text']").blur(function () {

            var address = $(this).val();
            if (address === '') {
                return;
            }
            var _this = this;
            var geocoder = new google.maps.Geocoder();
            geocoder.geocode({'address': address}, function (results, status) {
                if (status === google.maps.GeocoderStatus.OK)
                {
                    var pt = results[0].geometry.location;

                    var lng = pt.lng();
                    var lat = pt.lat();

                    $("div#useraccount_mapbookmark  form.useraccount_mapbookmark_form input[type='hidden'][name='lat']").map(function () {
                        $(this).val(lat);
                    });
                    $("div#useraccount_mapbookmark  form.useraccount_mapbookmark_form input[type='hidden'][name='lng']").map(function () {
                        $(this).val(lng);
                    });
                    $("div#useraccount_mapbookmark  form.useraccount_mapbookmark_form .address input[type='text']").map(function () {
                        $(this).val(results[0].formatted_address);
                    });

                    var layers = window.map.drawnItems.getLayers();
                    for (var i = layers.length - 1; i >= 0; i--) {
                        if (layers[i].source !== undefined && layers[i].source === 'searchbox_query') {
                            window.map.drawnItems.removeLayer(layers[i]);
                        }
                    }

                    var feature = L.marker([pt.lat(), pt.lng()], {draggable: 'true'});
                    feature.bindLabel(results[0].formatted_address);
                    feature.id = 0;
                    feature.name = results[0].formatted_address;
                    feature.index = window.map.drawnItems.getLayers().length;
                    feature.type = 'marker';
                    feature.source = 'searchbox_query';
                    feature.on("dragend", function (e) {

                        geocoder.geocode({'latLng': e.target.getLatLng()}, function (results, status) {
                            if (status === google.maps.GeocoderStatus.OK)
                            {
                                var pt = results[0].geometry.location;

                                var lng = pt.lng();
                                var lat = pt.lat();
                                window.map.removeLayer(feature.label);
                                feature.bindLabel(results[0].formatted_address);
                                $("div#useraccount_mapbookmark  form.useraccount_mapbookmark_form input[type='hidden'][name='lat']").map(function () {
                                    $(this).val(lat);
                                });
                                $("div#useraccount_mapbookmark  form.useraccount_mapbookmark_form input[type='hidden'][name='lng']").map(function () {
                                    $(this).val(lng);
                                });
                                $("div#useraccount_mapbookmark  form.useraccount_mapbookmark_form .address input[type='text']").map(function () {
                                    $(this).val(results[0].formatted_address);
                                });
                            }
                        });
                    });
                    window.map.drawnItems.addLayer(feature);
                    window.map.setView(pt);
                } else {
                    alert("The given address is not able geocoding!");

                }
            });

        });

        $("div#useraccount_mapbookmark form.useraccount_mapbookmark_form button").unbind("click");
        $("div#useraccount_mapbookmark form.useraccount_mapbookmark_form button").click(function (e) {
            var address = $(this).parents("form").find("td.address input").val();
            var lng = null;
            var lat = null;
            if (address !== '' && address !== undefined && address !== null) {
                var geocoder = new google.maps.Geocoder();
                geocoder.geocode({'address': address}, function (results, status) {
                    if (status === google.maps.GeocoderStatus.OK)
                    {
                        var pt = results[0].geometry.location;
                        lng = pt.lng();
                        lat = pt.lat();
                    } else {
                        alert("The given address is not able geocoding!");
                    }
                });
            }
            if (lat === null || lng === null) {
                var pt = window.map.getCenter();
                lat = pt.lat;
                lng = pt.lng;
            }
            $(this).parents("form").find("input[type='hidden'][name='lat']").val(lat);
            $(this).parents("form").find("input[type='hidden'][name='lng']").val(lng);
            var formData = new FormData($(this).parents("form")[0]);

            $.ajax({
                url: Routing.generate('useraccount_mapbookmark', {'_locale': window.locale}),
                method: 'POST',
                data: formData,
                success: function (response) {
                    if (typeof response !== 'object') {
                        response = JSON.parse(response);
                    }
                    if (response.success === true) {
                        if ($("nav.juturna-main_menu li#viewingscale ul.dropdown-menu li a[data-id='" + response.seq + "']").length === 1) {
                            $("nav.juturna-main_menu li#viewingscale ul.dropdown-menu li a[data-id='" + response.seq + "']").data("zoom", response.zoom);
                            $("nav.juturna-main_menu li#viewingscale ul.dropdown-menu li a[data-id='" + response.seq + "']").data("center", response.lat + "," + response.lng);
                            $("nav.juturna-main_menu li#viewingscale ul.dropdown-menu li a[data-id='" + response.seq + "']").data("address", response.address);
                            $("nav.juturna-main_menu li#viewingscale ul.dropdown-menu li a[data-id='" + response.seq + "']").html(response.title);
                        } else {
                            if (response.seq === 1) {
                                $("li a[data-id='" + response.seq + "']").prependTo($("nav.juturna-main_menu li#viewingscale ul.dropdown-menu"));
                            } else {
                                if ($("nav.juturna-main_menu li#viewingscale ul.dropdown-menu li a[data-id='" + (response.seq - 1) + "']").length === 1) {
                                    $('<li><a data-center="' + response.lat + "," + response.lng + '" data-address="' + response.address + '" data-id="' + response.seq + '" data-zoom="' + response.zoom + '" href="#">' + response.title + '</a></li>').insertAfter($("nav.juturna-main_menu li#viewingscale ul.dropdown-menu li a[data-id='" + (response.seq - 1) + "']").parent("li"));
                                    viewingscale(window.map);
                                }
                            }
                        }
                    }
                    alert(response.message);
                },
                cache: false,
                contentType: false,
                processData: false
            });

        });
    });
</script>